// üîÅ Importe la fonction qui d√©termine la cat√©gorie en fonction du profil
import { choixCategorie } from './choix-categorie.js';

// üîÅ Importe la fonction pour afficher les cartes sp√©cifiques √† cette cat√©gorie (si besoin)
import { initialiserCartes } from '../ui/cartes.js';

// üîπ Fonction qui initialise le calcul de cat√©gorie lorsque l‚Äôutilisateur clique sur le bouton
export function initialiserCalculCategorie() {
  console.log("üü¢ initialiserCalculCategorie() lanc√©");

  const btn = document.getElementById("btn-calcul-prime"); // Bouton d√©clencheur

  btn.addEventListener("click", async () => {
    // üîç R√©cup√©ration des champs du formulaire
    const situation = document.getElementById("situation").value;
    const revenu1 = parseFloat(document.getElementById("revenu-demandeur").value || 0);
    const revenu2 = parseFloat(document.getElementById("revenu-conjoint").value || 0);
    const enfants = parseInt(document.getElementById("enfants").value || 0);
    const revenuTotal = revenu1 + revenu2;

    // üß† D√©termination du statut (cl√© de correspondance dans les conditions de cat√©gorie)
    let statut;
    if (situation === "isole") {
      statut = "seul";
    } else if (situation === "isole_avec_enfant" || situation === "couple") {
      statut = "seul_avec_charge_ou_couple_sans_charge";
    }

    // üì¶ Cr√©ation du profil complet √† envoyer pour calcul de cat√©gorie
    const profil = {
      revenuAnnuel: revenuTotal,
      statut,
      personnesACharge: enfants,
      autreBienEnPleinePropriete: false, // Peut √©voluer plus tard
      loueViaWoonmaatschappij: false     // Peut √©voluer plus tard
    };

    // üßÆ Calcul de la cat√©gorie via la logique m√©tier
    const cat = await choixCategorie(profil);

    // üéØ Mise √† jour de l'affichage de la cat√©gorie
    const resultElt = document.getElementById("categorie-resultat");
    const texteElt = document.getElementById("categorie-prime");

    texteElt.textContent = `Cat√©gorie ${cat.id.toUpperCase()} ‚Äì ${cat.description}` +
      (cat.eligible_pour_verbouwlening ? " ‚úÖ √©ligible √† Mijn VerbouwLening." : " ‚ùå non √©ligible √† Mijn VerbouwLening.");

    // üé® Changement dynamique de la couleur du bloc selon la cat√©gorie
    let couleur = "secondary";
    if (cat.id === "categorie_4") couleur = "success";
    else if (cat.id === "categorie_3") couleur = "info";
    else if (cat.id === "categorie_2") couleur = "warning";
    else if (cat.id === "categorie_1") couleur = "danger";
    else couleur = "dark";

    resultElt.className = `alert alert-${couleur} mt-4`;

    // üîÅ Recharge des cartes apr√®s calcul de la cat√©gorie, pour n‚Äôafficher que celles pertinentes
    import('../logic/primes.js').then(module => {
      module.initialiserPrimes();
    });
  });
}

// üîß Fonction utilitaire qui extrait l‚Äôidentifiant num√©rique de la cat√©gorie affich√©e
export function getCategorieId() {
  const span = document.getElementById("categorie-prime");
  if (!span) return "3"; // Valeur par d√©faut

  const texte = span.textContent.trim();
  const match = texte.match(/\d+/); // Cherche un nombre dans le texte
  return match ? match[0] : "3"; // Retourne "1", "2", "3", etc. ou "3" si rien trouv√©
}
